cabal-version: 2.2


-- package information
name:               harser
version:            0.1.0.0
synopsis:           (H)askell P(arser) Framework
description:        Harser is a monadic parsing framework,
                    built from scratch, and takes inspiration
                    from `Text.Parsec`, although Harser is a
                    little bit lighter weight.
author:             Rose<https://github.com/Xenovia02>
maintainer:         Rose<https://github.com/Xenovia02>
category:           Parsing
license:            MIT
license-file:       LICENSE
extra-source-files: README.md

-- package information
build-type:         Simple


-- COMMONS
common exts
    other-extensions:
        FlexibleContexts,
        FunctionalDependencies,
        FlexibleInstances,
        FlexibleContexts

common deps
    build-depends:
        base == 4.*,
        text
    default-language:
        Haskell2010

common oth-mods
    other-modules:
        Harser.Char,
        Harser.Combinators,
        Harser.Parser,
        Harser.State,
        Harser.Stream,
        Harser.Testing,
        Harser.Utilities

common opts
    ghc-options:
        -Wall
        -- -Werror
        -Wextra
        -fhide-source-paths
        -freverse-errors

common example-stuff
    import:
        opts,
        deps,
        oth-mods
    build-depends:
        containers,
        harser

common test-stuff
    import:
        deps,
        opts,
        oth-mods
    other-modules:
        Tests.TestTools
    build-depends:
        harser
    ghc-options:
        -Werror


-- LIBRARY
source-repository head
    type:
        git
    location:
        https://github.com/Xenovia02/Harser

library
    import:
        exts,
        deps,
        opts
    exposed-modules:
        Harser.Char,
        Harser.Combinators,
        Harser.Parser,
        Harser.Testing,
        Harser.Utilities
    other-modules:
        Harser.State,
        Harser.Stream
    ghc-options:
        -O3


-- EXAMPLES
executable Calculator
    import:
        example-stuff
    main-is:
        Examples/Calculator.hs

executable CalcWithVars
    import:
        example-stuff
    main-is:
        Examples/Calculator.hs

executable Lang
    import:
        example-stuff
    main-is:
        Examples/Lang.hs
    other-modules:
        Examples.Lang.Data
        Examples.Lang.Grammar
        Examples.Lang.Lang
        Examples.Lang.State


-- TEST SUITES
test-suite Combinators
    import:
        test-stuff
    type:
        exitcode-stdio-1.0
    main-is:
        Tests/Combinators.hs

test-suite Parser
    import:
        test-stuff
    type:
        exitcode-stdio-1.0
    main-is:
        Tests/Parser.hs

test-suite Utilities
    import:
        test-stuff
    type:
        exitcode-stdio-1.0
    main-is:
        Tests/Utilities.hs
